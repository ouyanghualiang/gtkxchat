# Makefile.in generated by automake 1.14.1 from Makefile.am.
# src/fe-gtk/Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994-2013 Free Software Foundation, Inc.

# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.




am__is_gnu_make = test -n '$(MAKEFILE_LIST)' && test -n '$(MAKELEVEL)'
am__make_running_with_option = \
  case $${target_option-} in \
      ?) ;; \
      *) echo "am__make_running_with_option: internal error: invalid" \
              "target option '$${target_option-}' specified" >&2; \
         exit 1;; \
  esac; \
  has_opt=no; \
  sane_makeflags=$$MAKEFLAGS; \
  if $(am__is_gnu_make); then \
    sane_makeflags=$$MFLAGS; \
  else \
    case $$MAKEFLAGS in \
      *\\[\ \	]*) \
        bs=\\; \
        sane_makeflags=`printf '%s\n' "$$MAKEFLAGS" \
          | sed "s/$$bs$$bs[$$bs $$bs	]*//g"`;; \
    esac; \
  fi; \
  skip_next=no; \
  strip_trailopt () \
  { \
    flg=`printf '%s\n' "$$flg" | sed "s/$$1.*$$//"`; \
  }; \
  for flg in $$sane_makeflags; do \
    test $$skip_next = yes && { skip_next=no; continue; }; \
    case $$flg in \
      *=*|--*) continue;; \
        -*I) strip_trailopt 'I'; skip_next=yes;; \
      -*I?*) strip_trailopt 'I';; \
        -*O) strip_trailopt 'O'; skip_next=yes;; \
      -*O?*) strip_trailopt 'O';; \
        -*l) strip_trailopt 'l'; skip_next=yes;; \
      -*l?*) strip_trailopt 'l';; \
      -[dEDm]) skip_next=yes;; \
      -[JT]) skip_next=yes;; \
    esac; \
    case $$flg in \
      *$$target_option*) has_opt=yes; break;; \
    esac; \
  done; \
  test $$has_opt = yes
am__make_dryrun = (target_option=n; $(am__make_running_with_option))
am__make_keepgoing = (target_option=k; $(am__make_running_with_option))
pkgdatadir = $(datadir)/hexchat
pkgincludedir = $(includedir)/hexchat
pkglibdir = $(libdir)/hexchat
pkglibexecdir = $(libexecdir)/hexchat
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = i686-pc-linux-gnu
host_triplet = i686-pc-linux-gnu
DIST_COMMON = $(top_srcdir)/m4/clang-analyze.am $(srcdir)/Makefile.in \
	$(srcdir)/Makefile.am $(top_srcdir)/build-aux/depcomp
bin_PROGRAMS = hexchat$(EXEEXT)
subdir = src/fe-gtk
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/m4/as-ac-expand.m4 \
	$(top_srcdir)/m4/ax_check_enable_debug.m4 \
	$(top_srcdir)/m4/ax_is_release.m4 \
	$(top_srcdir)/m4/ax_python_devel.m4 \
	$(top_srcdir)/m4/intltool.m4 $(top_srcdir)/m4/libtool.m4 \
	$(top_srcdir)/m4/ltoptions.m4 $(top_srcdir)/m4/ltsugar.m4 \
	$(top_srcdir)/m4/ltversion.m4 $(top_srcdir)/m4/lt~obsolete.m4 \
	$(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
am__installdirs = "$(DESTDIR)$(bindir)"
PROGRAMS = $(bin_PROGRAMS)
am__hexchat_SOURCES_DIST = ascii.c banlist.c chanlist.c chanview.c \
	custom-list.c dccgui.c editlist.c fe-gtk.c fkeys.c gtkutil.c \
	ignoregui.c joind.c menu.c maingui.c notifygui.c \
	notifications/notification-dummy.c \
	notifications/notification-osx.m \
	notifications/notification-libnotify.c palette.c pixmaps.c \
	plugin-tray.c plugingui.c plugin-notification.c rawlog.c \
	servlistgui.c setup.c sexy-iso-codes.c sexy-spell-entry.c \
	textgui.c urlgrab.c userlistgui.c xtext.c
am__dirstamp = $(am__leading_dot)dirstamp
#am__objects_1 = notifications/hexchat-notification-dummy.$(OBJEXT)
##am__objects_1 = notifications/hexchat-notification-osx.$(OBJEXT)
am__objects_1 = notifications/hexchat-notification-libnotify.$(OBJEXT)
am__objects_2 = hexchat-plugingui.$(OBJEXT)
am__objects_3 = hexchat-sexy-iso-codes.$(OBJEXT)
am_hexchat_OBJECTS = hexchat-ascii.$(OBJEXT) hexchat-banlist.$(OBJEXT) \
	hexchat-chanlist.$(OBJEXT) hexchat-chanview.$(OBJEXT) \
	hexchat-custom-list.$(OBJEXT) hexchat-dccgui.$(OBJEXT) \
	hexchat-editlist.$(OBJEXT) hexchat-fe-gtk.$(OBJEXT) \
	hexchat-fkeys.$(OBJEXT) hexchat-gtkutil.$(OBJEXT) \
	hexchat-ignoregui.$(OBJEXT) hexchat-joind.$(OBJEXT) \
	hexchat-menu.$(OBJEXT) hexchat-maingui.$(OBJEXT) \
	hexchat-notifygui.$(OBJEXT) $(am__objects_1) \
	hexchat-palette.$(OBJEXT) hexchat-pixmaps.$(OBJEXT) \
	hexchat-plugin-tray.$(OBJEXT) $(am__objects_2) \
	hexchat-plugin-notification.$(OBJEXT) hexchat-rawlog.$(OBJEXT) \
	hexchat-servlistgui.$(OBJEXT) hexchat-setup.$(OBJEXT) \
	$(am__objects_3) hexchat-sexy-spell-entry.$(OBJEXT) \
	hexchat-textgui.$(OBJEXT) hexchat-urlgrab.$(OBJEXT) \
	hexchat-userlistgui.$(OBJEXT) hexchat-xtext.$(OBJEXT)
nodist_hexchat_OBJECTS = hexchat-resources.$(OBJEXT)
hexchat_OBJECTS = $(am_hexchat_OBJECTS) $(nodist_hexchat_OBJECTS)
am__DEPENDENCIES_1 =
hexchat_DEPENDENCIES = $(top_builddir)/src/common/libhexchatcommon.a \
	$(am__DEPENDENCIES_1)
AM_V_lt = $(am__v_lt_$(V))
am__v_lt_ = $(am__v_lt_$(AM_DEFAULT_VERBOSITY))
am__v_lt_0 = --silent
am__v_lt_1 = 
hexchat_LINK = $(LIBTOOL) $(AM_V_lt) $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(OBJCLD) $(AM_OBJCFLAGS) \
	$(OBJCFLAGS) $(hexchat_LDFLAGS) $(LDFLAGS) -o $@
AM_V_P = $(am__v_P_$(V))
am__v_P_ = $(am__v_P_$(AM_DEFAULT_VERBOSITY))
am__v_P_0 = false
am__v_P_1 = :
AM_V_GEN = $(am__v_GEN_$(V))
am__v_GEN_ = $(am__v_GEN_$(AM_DEFAULT_VERBOSITY))
am__v_GEN_0 = @echo "  GEN     " $@;
am__v_GEN_1 = 
AM_V_at = $(am__v_at_$(V))
am__v_at_ = $(am__v_at_$(AM_DEFAULT_VERBOSITY))
am__v_at_0 = @
am__v_at_1 = 
DEFAULT_INCLUDES = -I. -I$(top_builddir)
depcomp = $(SHELL) $(top_srcdir)/build-aux/depcomp
am__depfiles_maybe = depfiles
am__mv = mv -f
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CFLAGS) $(CFLAGS)
AM_V_CC = $(am__v_CC_$(V))
am__v_CC_ = $(am__v_CC_$(AM_DEFAULT_VERBOSITY))
am__v_CC_0 = @echo "  CC      " $@;
am__v_CC_1 = 
CCLD = $(CC)
LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_CCLD = $(am__v_CCLD_$(V))
am__v_CCLD_ = $(am__v_CCLD_$(AM_DEFAULT_VERBOSITY))
am__v_CCLD_0 = @echo "  CCLD    " $@;
am__v_CCLD_1 = 
OBJCCOMPILE = $(OBJC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_OBJCFLAGS) $(OBJCFLAGS)
LTOBJCCOMPILE = $(LIBTOOL) $(AM_V_lt) $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=compile $(OBJC) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_OBJCFLAGS) $(OBJCFLAGS)
AM_V_OBJC = $(am__v_OBJC_$(V))
am__v_OBJC_ = $(am__v_OBJC_$(AM_DEFAULT_VERBOSITY))
am__v_OBJC_0 = @echo "  OBJC    " $@;
am__v_OBJC_1 = 
OBJCLD = $(OBJC)
OBJCLINK = $(LIBTOOL) $(AM_V_lt) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=link $(OBJCLD) $(AM_OBJCFLAGS) $(OBJCFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_OBJCLD = $(am__v_OBJCLD_$(V))
am__v_OBJCLD_ = $(am__v_OBJCLD_$(AM_DEFAULT_VERBOSITY))
am__v_OBJCLD_0 = @echo "  OBJCLD  " $@;
am__v_OBJCLD_1 = 
SOURCES = $(hexchat_SOURCES) $(nodist_hexchat_SOURCES)
DIST_SOURCES = $(am__hexchat_SOURCES_DIST)
am__can_run_installinfo = \
  case $$AM_UPDATE_INFO_DIR in \
    n|no|NO) false;; \
    *) (install-info --version) >/dev/null 2>&1;; \
  esac
am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES) $(LISP)
# Read a list of newline-separated strings from the standard input,
# and print each of them once, without duplicates.  Input order is
# *not* preserved.
am__uniquify_input = $(AWK) '\
  BEGIN { nonempty = 0; } \
  { items[$$0] = 1; nonempty = 1; } \
  END { if (nonempty) { for (i in items) print i; }; } \
'
# Make sure the list of sources is unique.  This is necessary because,
# e.g., the same source file might be shared among _SOURCES variables
# for different programs/libraries.
am__define_uniq_tagged_files = \
  list='$(am__tagged_files)'; \
  unique=`for i in $$list; do \
    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
  done | $(am__uniquify_input)`
ETAGS = etags
CTAGS = ctags
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = ${SHELL} /home/ouyang/Documents/hexchat/build-aux/missing aclocal-1.14
ALL_LINGUAS = 
AMTAR = $${TAR-tar}
AM_DEFAULT_VERBOSITY = 0
AR = ar
AUTOCONF = ${SHELL} /home/ouyang/Documents/hexchat/build-aux/missing autoconf
AUTOHEADER = ${SHELL} /home/ouyang/Documents/hexchat/build-aux/missing autoheader
AUTOMAKE = ${SHELL} /home/ouyang/Documents/hexchat/build-aux/missing automake-1.14
AWK = mawk
CATALOGS = 
CATOBJEXT = .gmo
CC = gcc
CCAS = gcc
CCASDEPMODE = depmode=gcc3
CCASFLAGS = 
CCDEPMODE = depmode=gcc3
CFLAGS =  -pipe -funsigned-char -fPIE -fPIC -Wall -Wextra -Wstrict-prototypes -Wno-unused-parameter -Wno-sign-compare -Wno-pointer-sign -Wno-missing-field-initializers -Wno-unused-result -Werror=format-security -Werror=init-self -Werror=declaration-after-statement -Werror=missing-include-dirs -Werror=implicit-function-declaration -Werror=pointer-arith
COMMON_CFLAGS = -pthread -I/usr/include/glib-2.0 -I/usr/lib/i386-linux-gnu/glib-2.0/include   -DG_DISABLE_SINGLE_INCLUDES -pthread -I/usr/include/dbus-1.0 -I/usr/lib/i386-linux-gnu/dbus-1.0/include -I/usr/include/glib-2.0 -I/usr/lib/i386-linux-gnu/glib-2.0/include  
COMMON_LIBS = -Wl,--export-dynamic -pthread -lgmodule-2.0 -lgio-2.0 -lgobject-2.0 -lglib-2.0   -pthread -ldbus-glib-1 -ldbus-1 -lgobject-2.0 -lgthread-2.0 -lglib-2.0  
CPP = gcc -E
CPPFLAGS = 
CYGPATH_W = echo
DATADIRNAME = share
DBUS_BINDING_TOOL = /usr/bin/dbus-binding-tool
DBUS_CFLAGS = -pthread -I/usr/include/dbus-1.0 -I/usr/lib/i386-linux-gnu/dbus-1.0/include -I/usr/include/glib-2.0 -I/usr/lib/i386-linux-gnu/glib-2.0/include  
DBUS_LIBS = -pthread -ldbus-glib-1 -ldbus-1 -lgobject-2.0 -lgthread-2.0 -lglib-2.0  
DBUS_SERVICES_DIR = /usr/local/share/dbus-1/services
DEFS = -DHAVE_CONFIG_H
DEPDIR = .deps
DLLTOOL = false
DSYMUTIL = 
DUMPBIN = 
ECHO_C = 
ECHO_N = -n
ECHO_T = 
EGREP = /bin/grep -E
EXEEXT = 
FGREP = /bin/grep -F
GETTEXT_PACKAGE = hexchat
GLIB_CFLAGS = -pthread -I/usr/include/glib-2.0 -I/usr/lib/i386-linux-gnu/glib-2.0/include  
GLIB_COMPILE_RESOURCES = /usr/lib/i386-linux-gnu/glib-2.0/glib-compile-resources
GLIB_GENMARSHAL = glib-genmarshal
GLIB_LIBS = -Wl,--export-dynamic -pthread -lgmodule-2.0 -lgio-2.0 -lgobject-2.0 -lglib-2.0  
GLIB_MKENUMS = glib-mkenums
GMOFILES = 
GMSGFMT = /usr/bin/msgfmt
GOBJECT_QUERY = gobject-query
GREP = /bin/grep
GTK_CFLAGS = -pthread -I/usr/include/gtk-2.0 -I/usr/lib/i386-linux-gnu/gtk-2.0/include -I/usr/include/atk-1.0 -I/usr/include/cairo -I/usr/include/gdk-pixbuf-2.0 -I/usr/include/pango-1.0 -I/usr/include/gio-unix-2.0/ -I/usr/include/freetype2 -I/usr/include/glib-2.0 -I/usr/lib/i386-linux-gnu/glib-2.0/include -I/usr/include/pixman-1 -I/usr/include/libpng12 -I/usr/include/harfbuzz  
GTK_LIBS = -lgtk-x11-2.0 -lgdk-x11-2.0 -latk-1.0 -lgio-2.0 -lpangoft2-1.0 -lpangocairo-1.0 -lgdk_pixbuf-2.0 -lcairo -lpango-1.0 -lfontconfig -lgobject-2.0 -lglib-2.0 -lfreetype  
GTK_MAC_CFLAGS = 
GTK_MAC_LIBS = 
GUI_CFLAGS =  -pthread -I/usr/include/gtk-2.0 -I/usr/lib/i386-linux-gnu/gtk-2.0/include -I/usr/include/atk-1.0 -I/usr/include/cairo -I/usr/include/gdk-pixbuf-2.0 -I/usr/include/pango-1.0 -I/usr/include/gio-unix-2.0/ -I/usr/include/freetype2 -I/usr/include/glib-2.0 -I/usr/lib/i386-linux-gnu/glib-2.0/include -I/usr/include/pixman-1 -I/usr/include/libpng12 -I/usr/include/harfbuzz   -DGDK_PIXBUF_DISABLE_SINGLE_INCLUDES -DGTK_DISABLE_SINGLE_INCLUDES -DGTK_DISABLE_DEPRECATED -pthread -I/usr/include/gdk-pixbuf-2.0 -I/usr/include/glib-2.0 -I/usr/lib/i386-linux-gnu/glib-2.0/include -I/usr/include/libpng12  
GUI_LIBS =  -lgtk-x11-2.0 -lgdk-x11-2.0 -latk-1.0 -lgio-2.0 -lpangoft2-1.0 -lpangocairo-1.0 -lgdk_pixbuf-2.0 -lcairo -lpango-1.0 -lfontconfig -lgobject-2.0 -lglib-2.0 -lfreetype   -lnotify -lgdk_pixbuf-2.0 -lgio-2.0 -lgobject-2.0 -lglib-2.0   -Wl,--export-dynamic -pthread -lgmodule-2.0 -lgio-2.0 -lgobject-2.0 -lglib-2.0   -pthread -ldbus-glib-1 -ldbus-1 -lgobject-2.0 -lgthread-2.0 -lglib-2.0  
HEXCHATLIBDIR = /usr/local/lib/hexchat/plugins
HEXCHATSHAREDIR = /usr/local/share
INSTALL = /usr/bin/install -c
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = $(install_sh) -c -s
INSTOBJEXT = .mo
INTLLIBS = 
INTLTOOL_EXTRACT = /usr/bin/intltool-extract
INTLTOOL_MERGE = /usr/bin/intltool-merge
INTLTOOL_PERL = /usr/bin/perl
INTLTOOL_UPDATE = /usr/bin/intltool-update
INTLTOOL_V_MERGE = $(INTLTOOL__v_MERGE_$(V))
INTLTOOL_V_MERGE_OPTIONS = $(intltool__v_merge_options_$(V))
INTLTOOL__v_MERGE_ = $(INTLTOOL__v_MERGE_$(AM_DEFAULT_VERBOSITY))
INTLTOOL__v_MERGE_0 = @echo "  ITMRG " $@;
ISOCODES_CFLAGS =  
ISOCODES_LIBS =  
LD = /usr/bin/ld
LDFLAGS =  -pie -Wl,-z,relro -Wl,-z,now
LIBCANBERRA_CFLAGS = 
LIBCANBERRA_LIBS = 
LIBNOTIFY_CFLAGS = -pthread -I/usr/include/gdk-pixbuf-2.0 -I/usr/include/glib-2.0 -I/usr/lib/i386-linux-gnu/glib-2.0/include -I/usr/include/libpng12  
LIBNOTIFY_LIBS = -lnotify -lgdk_pixbuf-2.0 -lgio-2.0 -lgobject-2.0 -lglib-2.0  
LIBOBJS = 
LIBPCI_CFLAGS = 
LIBPCI_LIBS = 
LIBPROXY_CFLAGS = 
LIBPROXY_LIBS = 
LIBS =  
LIBTOOL = $(SHELL) $(top_builddir)/libtool
LIPO = 
LN_S = ln -s
LTLIBOBJS = 
LUA = lua5.1
LUA_CFLAGS = -I/usr/include/lua5.1  
LUA_LIBS = -llua5.1  
MAINT = 
MAKEINFO = ${SHELL} /home/ouyang/Documents/hexchat/build-aux/missing makeinfo
MANIFEST_TOOL = :
MDTOOL = no
MKDIR_P = /bin/mkdir -p
MKINSTALLDIRS = build-aux/mkinstalldirs
MSGFMT = /usr/bin/msgfmt
MSGFMT_OPTS = -c
MSGMERGE = /usr/bin/msgmerge
NM = /usr/bin/nm -B
NMEDIT = 
OBJC = gcc
OBJCDEPMODE = depmode=gcc3
OBJCFLAGS = 
OBJDUMP = objdump
OBJEXT = o
OPENSSL_CFLAGS = 
OPENSSL_LIBS = -lcrypto
OTOOL = 
OTOOL64 = 
PACKAGE = hexchat
PACKAGE_BUGREPORT = 
PACKAGE_NAME = HexChat
PACKAGE_STRING = HexChat 2.12.4
PACKAGE_TARNAME = hexchat
PACKAGE_URL = 
PACKAGE_VERSION = 2.12.4
PATH_SEPARATOR = :
PERL = perl
PERL_CFLAGS =  -D_REENTRANT -D_GNU_SOURCE -DDEBIAN -fstack-protector -fno-strict-aliasing -pipe -I/usr/local/include -D_LARGEFILE_SOURCE -D_FILE_OFFSET_BITS=64  -I/usr/lib/perl/5.18/CORE 
PERL_LDFLAGS = -Wl,-E  -fstack-protector -L/usr/local/lib  -L/usr/lib/perl/5.18/CORE -lperl -ldl -lm -lpthread -lc -lcrypt
PKG_CONFIG = /usr/bin/pkg-config
PKG_CONFIG_LIBDIR = 
PKG_CONFIG_PATH = 
PLUGIN_LDFLAGS = -avoid-version
POFILES = 
POSUB = po
PO_IN_DATADIR_FALSE = 
PO_IN_DATADIR_TRUE = 
PYTHON = /usr/bin/python2
PYTHON_CPPFLAGS = -I/usr/include/python2.7
PYTHON_EXTRA_LDFLAGS = -lpthread -ldl  -lutil -lm
PYTHON_EXTRA_LIBS = -Xlinker -export-dynamic -Wl,-O1 -Wl,-Bsymbolic-functions
PYTHON_LIBS = -L/usr/lib -lpython2.7
PYTHON_SITE_PKG = /usr/lib/python2.7/dist-packages
PYTHON_VERSION = 2
RANLIB = ranlib
SED = /bin/sed
SET_MAKE = 
SHELL = /bin/bash
STRIP = strip
USE_NLS = yes
VERSION = 2.12.4
XGETTEXT = /usr/bin/xgettext
abs_builddir = /home/ouyang/Documents/hexchat/src/fe-gtk
abs_srcdir = /home/ouyang/Documents/hexchat/src/fe-gtk
abs_top_builddir = /home/ouyang/Documents/hexchat
abs_top_srcdir = /home/ouyang/Documents/hexchat
ac_ct_AR = ar
ac_ct_CC = gcc
ac_ct_DUMPBIN = 
ac_ct_OBJC = gcc
am__include = include
am__leading_dot = .
am__quote = 
am__tar = $${TAR-tar} chof - "$$tardir"
am__untar = $${TAR-tar} xf -
bindir = ${exec_prefix}/bin
build = i686-pc-linux-gnu
build_alias = 
build_cpu = i686
build_os = linux-gnu
build_vendor = pc
builddir = .
datadir = ${datarootdir}
datarootdir = ${prefix}/share
docdir = ${datarootdir}/doc/${PACKAGE_TARNAME}
dvidir = ${docdir}
exec_prefix = /usr/local
hexchatlibdir = ${exec_prefix}/lib/hexchat/plugins
host = i686-pc-linux-gnu
host_alias = 
host_cpu = i686
host_os = linux-gnu
host_vendor = pc
htmldir = ${docdir}
includedir = ${prefix}/include
infodir = ${datarootdir}/info
install_sh = ${SHELL} /home/ouyang/Documents/hexchat/build-aux/install-sh
intltool__v_merge_options_ = $(intltool__v_merge_options_$(AM_DEFAULT_VERBOSITY))
intltool__v_merge_options_0 = -q
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
localedir = $(datadir)/locale
localstatedir = ${prefix}/var
mandir = ${datarootdir}/man
mkdir_p = $(MKDIR_P)
oldincludedir = /usr/include
pdfdir = ${docdir}
pkgconfigdir = ${exec_prefix}/lib/pkgconfig
prefix = /usr/local
program_transform_name = s,x,x,
psdir = ${docdir}
sbindir = ${exec_prefix}/sbin
sedpath = /bin/sed
sharedstatedir = ${prefix}/com
srcdir = .
sysconfdir = ${prefix}/etc
target_alias = 
top_build_prefix = ../../
top_builddir = ../..
top_srcdir = ../..
unamepath = /bin/uname
analysis_verbose = $(analysis_verbose_$(V))
analysis_verbose_ = $(analysis_verbose_$(AM_DEFAULT_VERBOSITY))
analysis_verbose_0 = @echo "  CCSA    " $@; $(COMPILE) --analyze $< -o $@;
analysis_verbose_1 = $(COMPILE) --analyze $< -o $@;
AM_CPPFLAGS = $(GUI_CFLAGS) -DLOCALEDIR=\"$(localedir)\"
hexchat_LDADD = $(top_builddir)/src/common/libhexchatcommon.a $(GUI_LIBS)
EXTRA_DIST = ascii.h banlist.h chanlist.h chanview.h chanview-tabs.c \
	chanview-tree.c custom-list.h editlist.h fe-gtk.h fkeys.h \
	gtkutil.h joind.h maingui.h menu.h notifygui.h notifications \
	palette.h pixmaps.h plugin-notification.h plugin-tray.h \
	plugingui.c plugingui.h rawlog.h servlistgui.h setup.h \
	sexy-iso-codes.h sexy-spell-entry.h textgui.h urlgrab.h \
	userlistgui.h xtext.h $(resources_files)
BUILT_SOURCES = resources.h resources.c
CLEANFILES = $(BUILT_SOURCES)
plugingui_c = plugingui.c
iso_codes_c = sexy-iso-codes.c
#notify_c = notifications/notification-dummy.c
##notify_c = notifications/notification-osx.m
notify_c = notifications/notification-libnotify.c
##hexchat_LDFLAGS = -framework Foundation
nodist_hexchat_SOURCES = resources.h resources.c
hexchat_SOURCES = ascii.c banlist.c chanlist.c chanview.c custom-list.c \
	dccgui.c editlist.c fe-gtk.c fkeys.c gtkutil.c ignoregui.c joind.c menu.c \
	maingui.c notifygui.c $(notify_c) palette.c pixmaps.c plugin-tray.c $(plugingui_c) \
	plugin-notification.c rawlog.c servlistgui.c setup.c $(iso_codes_c) \
	sexy-spell-entry.c textgui.c urlgrab.c userlistgui.c xtext.c

hexchat_CPPFLAGS = -I$(top_builddir)/src/common $(AM_CPPFLAGS)
resources_files = $(shell $(GLIB_COMPILE_RESOURCES) --sourcedir=$(top_srcdir)/data --generate-dependencies $(top_srcdir)/data/hexchat.gresource.xml)
#analyze_plists = $(hexchat_SOURCES:%.c=%.plist)
#MOSTLYCLEANFILES = $(analyze_plists)
all: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) all-am

.SUFFIXES:
.SUFFIXES: .c .lo .m .o .obj
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am $(top_srcdir)/m4/clang-analyze.am $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign src/fe-gtk/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --foreign src/fe-gtk/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;
$(top_srcdir)/m4/clang-analyze.am:

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):
install-binPROGRAMS: $(bin_PROGRAMS)
	@$(NORMAL_INSTALL)
	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(bindir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(bindir)" || exit 1; \
	fi; \
	for p in $$list; do echo "$$p $$p"; done | \
	sed 's/$(EXEEXT)$$//' | \
	while read p p1; do if test -f $$p \
	 || test -f $$p1 \
	  ; then echo "$$p"; echo "$$p"; else :; fi; \
	done | \
	sed -e 'p;s,.*/,,;n;h' \
	    -e 's|.*|.|' \
	    -e 'p;x;s,.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/' | \
	sed 'N;N;N;s,\n, ,g' | \
	$(AWK) 'BEGIN { files["."] = ""; dirs["."] = 1 } \
	  { d=$$3; if (dirs[d] != 1) { print "d", d; dirs[d] = 1 } \
	    if ($$2 == $$4) files[d] = files[d] " " $$1; \
	    else { print "f", $$3 "/" $$4, $$1; } } \
	  END { for (d in files) print "f", d, files[d] }' | \
	while read type dir files; do \
	    if test "$$dir" = .; then dir=; else dir=/$$dir; fi; \
	    test -z "$$files" || { \
	    echo " $(INSTALL_PROGRAM_ENV) $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL_PROGRAM) $$files '$(DESTDIR)$(bindir)$$dir'"; \
	    $(INSTALL_PROGRAM_ENV) $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL_PROGRAM) $$files "$(DESTDIR)$(bindir)$$dir" || exit $$?; \
	    } \
	; done

uninstall-binPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
	files=`for p in $$list; do echo "$$p"; done | \
	  sed -e 'h;s,^.*/,,;s/$(EXEEXT)$$//;$(transform)' \
	      -e 's/$$/$(EXEEXT)/' \
	`; \
	test -n "$$list" || exit 0; \
	echo " ( cd '$(DESTDIR)$(bindir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(bindir)" && rm -f $$files

clean-binPROGRAMS:
	@list='$(bin_PROGRAMS)'; test -n "$$list" || exit 0; \
	echo " rm -f" $$list; \
	rm -f $$list || exit $$?; \
	test -n "$(EXEEXT)" || exit 0; \
	list=`for p in $$list; do echo "$$p"; done | sed 's/$(EXEEXT)$$//'`; \
	echo " rm -f" $$list; \
	rm -f $$list
notifications/$(am__dirstamp):
	@$(MKDIR_P) notifications
	@: > notifications/$(am__dirstamp)
notifications/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) notifications/$(DEPDIR)
	@: > notifications/$(DEPDIR)/$(am__dirstamp)
notifications/hexchat-notification-dummy.$(OBJEXT):  \
	notifications/$(am__dirstamp) \
	notifications/$(DEPDIR)/$(am__dirstamp)
notifications/hexchat-notification-osx.$(OBJEXT):  \
	notifications/$(am__dirstamp) \
	notifications/$(DEPDIR)/$(am__dirstamp)
notifications/hexchat-notification-libnotify.$(OBJEXT):  \
	notifications/$(am__dirstamp) \
	notifications/$(DEPDIR)/$(am__dirstamp)

hexchat$(EXEEXT): $(hexchat_OBJECTS) $(hexchat_DEPENDENCIES) $(EXTRA_hexchat_DEPENDENCIES) 
	@rm -f hexchat$(EXEEXT)
	$(AM_V_OBJCLD)$(hexchat_LINK) $(hexchat_OBJECTS) $(hexchat_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)
	-rm -f notifications/*.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

include ./$(DEPDIR)/hexchat-ascii.Po
include ./$(DEPDIR)/hexchat-banlist.Po
include ./$(DEPDIR)/hexchat-chanlist.Po
include ./$(DEPDIR)/hexchat-chanview.Po
include ./$(DEPDIR)/hexchat-custom-list.Po
include ./$(DEPDIR)/hexchat-dccgui.Po
include ./$(DEPDIR)/hexchat-editlist.Po
include ./$(DEPDIR)/hexchat-fe-gtk.Po
include ./$(DEPDIR)/hexchat-fkeys.Po
include ./$(DEPDIR)/hexchat-gtkutil.Po
include ./$(DEPDIR)/hexchat-ignoregui.Po
include ./$(DEPDIR)/hexchat-joind.Po
include ./$(DEPDIR)/hexchat-maingui.Po
include ./$(DEPDIR)/hexchat-menu.Po
include ./$(DEPDIR)/hexchat-notifygui.Po
include ./$(DEPDIR)/hexchat-palette.Po
include ./$(DEPDIR)/hexchat-pixmaps.Po
include ./$(DEPDIR)/hexchat-plugin-notification.Po
include ./$(DEPDIR)/hexchat-plugin-tray.Po
include ./$(DEPDIR)/hexchat-plugingui.Po
include ./$(DEPDIR)/hexchat-rawlog.Po
include ./$(DEPDIR)/hexchat-resources.Po
include ./$(DEPDIR)/hexchat-servlistgui.Po
include ./$(DEPDIR)/hexchat-setup.Po
include ./$(DEPDIR)/hexchat-sexy-iso-codes.Po
include ./$(DEPDIR)/hexchat-sexy-spell-entry.Po
include ./$(DEPDIR)/hexchat-textgui.Po
include ./$(DEPDIR)/hexchat-urlgrab.Po
include ./$(DEPDIR)/hexchat-userlistgui.Po
include ./$(DEPDIR)/hexchat-xtext.Po
include notifications/$(DEPDIR)/hexchat-notification-dummy.Po
include notifications/$(DEPDIR)/hexchat-notification-libnotify.Po
include notifications/$(DEPDIR)/hexchat-notification-osx.Po

.c.o:
	$(AM_V_CC)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.o$$||'`;\
	$(COMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
	$(am__mv) $$depbase.Tpo $$depbase.Po
#	$(AM_V_CC)source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(COMPILE) -c -o $@ $<

.c.obj:
	$(AM_V_CC)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.obj$$||'`;\
	$(COMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ `$(CYGPATH_W) '$<'` &&\
	$(am__mv) $$depbase.Tpo $$depbase.Po
#	$(AM_V_CC)source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(COMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.c.lo:
	$(AM_V_CC)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.lo$$||'`;\
	$(LTCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
	$(am__mv) $$depbase.Tpo $$depbase.Plo
#	$(AM_V_CC)source='$<' object='$@' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LTCOMPILE) -c -o $@ $<

hexchat-ascii.o: ascii.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hexchat_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT hexchat-ascii.o -MD -MP -MF $(DEPDIR)/hexchat-ascii.Tpo -c -o hexchat-ascii.o `test -f 'ascii.c' || echo '$(srcdir)/'`ascii.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/hexchat-ascii.Tpo $(DEPDIR)/hexchat-ascii.Po
#	$(AM_V_CC)source='ascii.c' object='hexchat-ascii.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hexchat_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o hexchat-ascii.o `test -f 'ascii.c' || echo '$(srcdir)/'`ascii.c

hexchat-ascii.obj: ascii.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hexchat_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT hexchat-ascii.obj -MD -MP -MF $(DEPDIR)/hexchat-ascii.Tpo -c -o hexchat-ascii.obj `if test -f 'ascii.c'; then $(CYGPATH_W) 'ascii.c'; else $(CYGPATH_W) '$(srcdir)/ascii.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/hexchat-ascii.Tpo $(DEPDIR)/hexchat-ascii.Po
#	$(AM_V_CC)source='ascii.c' object='hexchat-ascii.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hexchat_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o hexchat-ascii.obj `if test -f 'ascii.c'; then $(CYGPATH_W) 'ascii.c'; else $(CYGPATH_W) '$(srcdir)/ascii.c'; fi`

hexchat-banlist.o: banlist.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hexchat_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT hexchat-banlist.o -MD -MP -MF $(DEPDIR)/hexchat-banlist.Tpo -c -o hexchat-banlist.o `test -f 'banlist.c' || echo '$(srcdir)/'`banlist.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/hexchat-banlist.Tpo $(DEPDIR)/hexchat-banlist.Po
#	$(AM_V_CC)source='banlist.c' object='hexchat-banlist.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hexchat_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o hexchat-banlist.o `test -f 'banlist.c' || echo '$(srcdir)/'`banlist.c

hexchat-banlist.obj: banlist.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hexchat_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT hexchat-banlist.obj -MD -MP -MF $(DEPDIR)/hexchat-banlist.Tpo -c -o hexchat-banlist.obj `if test -f 'banlist.c'; then $(CYGPATH_W) 'banlist.c'; else $(CYGPATH_W) '$(srcdir)/banlist.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/hexchat-banlist.Tpo $(DEPDIR)/hexchat-banlist.Po
#	$(AM_V_CC)source='banlist.c' object='hexchat-banlist.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hexchat_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o hexchat-banlist.obj `if test -f 'banlist.c'; then $(CYGPATH_W) 'banlist.c'; else $(CYGPATH_W) '$(srcdir)/banlist.c'; fi`

hexchat-chanlist.o: chanlist.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hexchat_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT hexchat-chanlist.o -MD -MP -MF $(DEPDIR)/hexchat-chanlist.Tpo -c -o hexchat-chanlist.o `test -f 'chanlist.c' || echo '$(srcdir)/'`chanlist.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/hexchat-chanlist.Tpo $(DEPDIR)/hexchat-chanlist.Po
#	$(AM_V_CC)source='chanlist.c' object='hexchat-chanlist.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hexchat_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o hexchat-chanlist.o `test -f 'chanlist.c' || echo '$(srcdir)/'`chanlist.c

hexchat-chanlist.obj: chanlist.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hexchat_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT hexchat-chanlist.obj -MD -MP -MF $(DEPDIR)/hexchat-chanlist.Tpo -c -o hexchat-chanlist.obj `if test -f 'chanlist.c'; then $(CYGPATH_W) 'chanlist.c'; else $(CYGPATH_W) '$(srcdir)/chanlist.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/hexchat-chanlist.Tpo $(DEPDIR)/hexchat-chanlist.Po
#	$(AM_V_CC)source='chanlist.c' object='hexchat-chanlist.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hexchat_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o hexchat-chanlist.obj `if test -f 'chanlist.c'; then $(CYGPATH_W) 'chanlist.c'; else $(CYGPATH_W) '$(srcdir)/chanlist.c'; fi`

hexchat-chanview.o: chanview.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hexchat_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT hexchat-chanview.o -MD -MP -MF $(DEPDIR)/hexchat-chanview.Tpo -c -o hexchat-chanview.o `test -f 'chanview.c' || echo '$(srcdir)/'`chanview.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/hexchat-chanview.Tpo $(DEPDIR)/hexchat-chanview.Po
#	$(AM_V_CC)source='chanview.c' object='hexchat-chanview.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hexchat_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o hexchat-chanview.o `test -f 'chanview.c' || echo '$(srcdir)/'`chanview.c

hexchat-chanview.obj: chanview.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hexchat_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT hexchat-chanview.obj -MD -MP -MF $(DEPDIR)/hexchat-chanview.Tpo -c -o hexchat-chanview.obj `if test -f 'chanview.c'; then $(CYGPATH_W) 'chanview.c'; else $(CYGPATH_W) '$(srcdir)/chanview.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/hexchat-chanview.Tpo $(DEPDIR)/hexchat-chanview.Po
#	$(AM_V_CC)source='chanview.c' object='hexchat-chanview.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hexchat_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o hexchat-chanview.obj `if test -f 'chanview.c'; then $(CYGPATH_W) 'chanview.c'; else $(CYGPATH_W) '$(srcdir)/chanview.c'; fi`

hexchat-custom-list.o: custom-list.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hexchat_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT hexchat-custom-list.o -MD -MP -MF $(DEPDIR)/hexchat-custom-list.Tpo -c -o hexchat-custom-list.o `test -f 'custom-list.c' || echo '$(srcdir)/'`custom-list.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/hexchat-custom-list.Tpo $(DEPDIR)/hexchat-custom-list.Po
#	$(AM_V_CC)source='custom-list.c' object='hexchat-custom-list.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hexchat_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o hexchat-custom-list.o `test -f 'custom-list.c' || echo '$(srcdir)/'`custom-list.c

hexchat-custom-list.obj: custom-list.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hexchat_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT hexchat-custom-list.obj -MD -MP -MF $(DEPDIR)/hexchat-custom-list.Tpo -c -o hexchat-custom-list.obj `if test -f 'custom-list.c'; then $(CYGPATH_W) 'custom-list.c'; else $(CYGPATH_W) '$(srcdir)/custom-list.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/hexchat-custom-list.Tpo $(DEPDIR)/hexchat-custom-list.Po
#	$(AM_V_CC)source='custom-list.c' object='hexchat-custom-list.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hexchat_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o hexchat-custom-list.obj `if test -f 'custom-list.c'; then $(CYGPATH_W) 'custom-list.c'; else $(CYGPATH_W) '$(srcdir)/custom-list.c'; fi`

hexchat-dccgui.o: dccgui.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hexchat_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT hexchat-dccgui.o -MD -MP -MF $(DEPDIR)/hexchat-dccgui.Tpo -c -o hexchat-dccgui.o `test -f 'dccgui.c' || echo '$(srcdir)/'`dccgui.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/hexchat-dccgui.Tpo $(DEPDIR)/hexchat-dccgui.Po
#	$(AM_V_CC)source='dccgui.c' object='hexchat-dccgui.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hexchat_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o hexchat-dccgui.o `test -f 'dccgui.c' || echo '$(srcdir)/'`dccgui.c

hexchat-dccgui.obj: dccgui.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hexchat_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT hexchat-dccgui.obj -MD -MP -MF $(DEPDIR)/hexchat-dccgui.Tpo -c -o hexchat-dccgui.obj `if test -f 'dccgui.c'; then $(CYGPATH_W) 'dccgui.c'; else $(CYGPATH_W) '$(srcdir)/dccgui.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/hexchat-dccgui.Tpo $(DEPDIR)/hexchat-dccgui.Po
#	$(AM_V_CC)source='dccgui.c' object='hexchat-dccgui.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hexchat_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o hexchat-dccgui.obj `if test -f 'dccgui.c'; then $(CYGPATH_W) 'dccgui.c'; else $(CYGPATH_W) '$(srcdir)/dccgui.c'; fi`

hexchat-editlist.o: editlist.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hexchat_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT hexchat-editlist.o -MD -MP -MF $(DEPDIR)/hexchat-editlist.Tpo -c -o hexchat-editlist.o `test -f 'editlist.c' || echo '$(srcdir)/'`editlist.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/hexchat-editlist.Tpo $(DEPDIR)/hexchat-editlist.Po
#	$(AM_V_CC)source='editlist.c' object='hexchat-editlist.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hexchat_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o hexchat-editlist.o `test -f 'editlist.c' || echo '$(srcdir)/'`editlist.c

hexchat-editlist.obj: editlist.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hexchat_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT hexchat-editlist.obj -MD -MP -MF $(DEPDIR)/hexchat-editlist.Tpo -c -o hexchat-editlist.obj `if test -f 'editlist.c'; then $(CYGPATH_W) 'editlist.c'; else $(CYGPATH_W) '$(srcdir)/editlist.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/hexchat-editlist.Tpo $(DEPDIR)/hexchat-editlist.Po
#	$(AM_V_CC)source='editlist.c' object='hexchat-editlist.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hexchat_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o hexchat-editlist.obj `if test -f 'editlist.c'; then $(CYGPATH_W) 'editlist.c'; else $(CYGPATH_W) '$(srcdir)/editlist.c'; fi`

hexchat-fe-gtk.o: fe-gtk.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hexchat_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT hexchat-fe-gtk.o -MD -MP -MF $(DEPDIR)/hexchat-fe-gtk.Tpo -c -o hexchat-fe-gtk.o `test -f 'fe-gtk.c' || echo '$(srcdir)/'`fe-gtk.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/hexchat-fe-gtk.Tpo $(DEPDIR)/hexchat-fe-gtk.Po
#	$(AM_V_CC)source='fe-gtk.c' object='hexchat-fe-gtk.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hexchat_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o hexchat-fe-gtk.o `test -f 'fe-gtk.c' || echo '$(srcdir)/'`fe-gtk.c

hexchat-fe-gtk.obj: fe-gtk.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hexchat_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT hexchat-fe-gtk.obj -MD -MP -MF $(DEPDIR)/hexchat-fe-gtk.Tpo -c -o hexchat-fe-gtk.obj `if test -f 'fe-gtk.c'; then $(CYGPATH_W) 'fe-gtk.c'; else $(CYGPATH_W) '$(srcdir)/fe-gtk.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/hexchat-fe-gtk.Tpo $(DEPDIR)/hexchat-fe-gtk.Po
#	$(AM_V_CC)source='fe-gtk.c' object='hexchat-fe-gtk.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hexchat_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o hexchat-fe-gtk.obj `if test -f 'fe-gtk.c'; then $(CYGPATH_W) 'fe-gtk.c'; else $(CYGPATH_W) '$(srcdir)/fe-gtk.c'; fi`

hexchat-fkeys.o: fkeys.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hexchat_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT hexchat-fkeys.o -MD -MP -MF $(DEPDIR)/hexchat-fkeys.Tpo -c -o hexchat-fkeys.o `test -f 'fkeys.c' || echo '$(srcdir)/'`fkeys.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/hexchat-fkeys.Tpo $(DEPDIR)/hexchat-fkeys.Po
#	$(AM_V_CC)source='fkeys.c' object='hexchat-fkeys.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hexchat_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o hexchat-fkeys.o `test -f 'fkeys.c' || echo '$(srcdir)/'`fkeys.c

hexchat-fkeys.obj: fkeys.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hexchat_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT hexchat-fkeys.obj -MD -MP -MF $(DEPDIR)/hexchat-fkeys.Tpo -c -o hexchat-fkeys.obj `if test -f 'fkeys.c'; then $(CYGPATH_W) 'fkeys.c'; else $(CYGPATH_W) '$(srcdir)/fkeys.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/hexchat-fkeys.Tpo $(DEPDIR)/hexchat-fkeys.Po
#	$(AM_V_CC)source='fkeys.c' object='hexchat-fkeys.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hexchat_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o hexchat-fkeys.obj `if test -f 'fkeys.c'; then $(CYGPATH_W) 'fkeys.c'; else $(CYGPATH_W) '$(srcdir)/fkeys.c'; fi`

hexchat-gtkutil.o: gtkutil.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hexchat_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT hexchat-gtkutil.o -MD -MP -MF $(DEPDIR)/hexchat-gtkutil.Tpo -c -o hexchat-gtkutil.o `test -f 'gtkutil.c' || echo '$(srcdir)/'`gtkutil.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/hexchat-gtkutil.Tpo $(DEPDIR)/hexchat-gtkutil.Po
#	$(AM_V_CC)source='gtkutil.c' object='hexchat-gtkutil.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hexchat_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o hexchat-gtkutil.o `test -f 'gtkutil.c' || echo '$(srcdir)/'`gtkutil.c

hexchat-gtkutil.obj: gtkutil.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hexchat_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT hexchat-gtkutil.obj -MD -MP -MF $(DEPDIR)/hexchat-gtkutil.Tpo -c -o hexchat-gtkutil.obj `if test -f 'gtkutil.c'; then $(CYGPATH_W) 'gtkutil.c'; else $(CYGPATH_W) '$(srcdir)/gtkutil.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/hexchat-gtkutil.Tpo $(DEPDIR)/hexchat-gtkutil.Po
#	$(AM_V_CC)source='gtkutil.c' object='hexchat-gtkutil.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hexchat_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o hexchat-gtkutil.obj `if test -f 'gtkutil.c'; then $(CYGPATH_W) 'gtkutil.c'; else $(CYGPATH_W) '$(srcdir)/gtkutil.c'; fi`

hexchat-ignoregui.o: ignoregui.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hexchat_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT hexchat-ignoregui.o -MD -MP -MF $(DEPDIR)/hexchat-ignoregui.Tpo -c -o hexchat-ignoregui.o `test -f 'ignoregui.c' || echo '$(srcdir)/'`ignoregui.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/hexchat-ignoregui.Tpo $(DEPDIR)/hexchat-ignoregui.Po
#	$(AM_V_CC)source='ignoregui.c' object='hexchat-ignoregui.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hexchat_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o hexchat-ignoregui.o `test -f 'ignoregui.c' || echo '$(srcdir)/'`ignoregui.c

hexchat-ignoregui.obj: ignoregui.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hexchat_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT hexchat-ignoregui.obj -MD -MP -MF $(DEPDIR)/hexchat-ignoregui.Tpo -c -o hexchat-ignoregui.obj `if test -f 'ignoregui.c'; then $(CYGPATH_W) 'ignoregui.c'; else $(CYGPATH_W) '$(srcdir)/ignoregui.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/hexchat-ignoregui.Tpo $(DEPDIR)/hexchat-ignoregui.Po
#	$(AM_V_CC)source='ignoregui.c' object='hexchat-ignoregui.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hexchat_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o hexchat-ignoregui.obj `if test -f 'ignoregui.c'; then $(CYGPATH_W) 'ignoregui.c'; else $(CYGPATH_W) '$(srcdir)/ignoregui.c'; fi`

hexchat-joind.o: joind.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hexchat_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT hexchat-joind.o -MD -MP -MF $(DEPDIR)/hexchat-joind.Tpo -c -o hexchat-joind.o `test -f 'joind.c' || echo '$(srcdir)/'`joind.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/hexchat-joind.Tpo $(DEPDIR)/hexchat-joind.Po
#	$(AM_V_CC)source='joind.c' object='hexchat-joind.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hexchat_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o hexchat-joind.o `test -f 'joind.c' || echo '$(srcdir)/'`joind.c

hexchat-joind.obj: joind.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hexchat_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT hexchat-joind.obj -MD -MP -MF $(DEPDIR)/hexchat-joind.Tpo -c -o hexchat-joind.obj `if test -f 'joind.c'; then $(CYGPATH_W) 'joind.c'; else $(CYGPATH_W) '$(srcdir)/joind.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/hexchat-joind.Tpo $(DEPDIR)/hexchat-joind.Po
#	$(AM_V_CC)source='joind.c' object='hexchat-joind.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hexchat_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o hexchat-joind.obj `if test -f 'joind.c'; then $(CYGPATH_W) 'joind.c'; else $(CYGPATH_W) '$(srcdir)/joind.c'; fi`

hexchat-menu.o: menu.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hexchat_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT hexchat-menu.o -MD -MP -MF $(DEPDIR)/hexchat-menu.Tpo -c -o hexchat-menu.o `test -f 'menu.c' || echo '$(srcdir)/'`menu.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/hexchat-menu.Tpo $(DEPDIR)/hexchat-menu.Po
#	$(AM_V_CC)source='menu.c' object='hexchat-menu.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hexchat_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o hexchat-menu.o `test -f 'menu.c' || echo '$(srcdir)/'`menu.c

hexchat-menu.obj: menu.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hexchat_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT hexchat-menu.obj -MD -MP -MF $(DEPDIR)/hexchat-menu.Tpo -c -o hexchat-menu.obj `if test -f 'menu.c'; then $(CYGPATH_W) 'menu.c'; else $(CYGPATH_W) '$(srcdir)/menu.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/hexchat-menu.Tpo $(DEPDIR)/hexchat-menu.Po
#	$(AM_V_CC)source='menu.c' object='hexchat-menu.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hexchat_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o hexchat-menu.obj `if test -f 'menu.c'; then $(CYGPATH_W) 'menu.c'; else $(CYGPATH_W) '$(srcdir)/menu.c'; fi`

hexchat-maingui.o: maingui.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hexchat_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT hexchat-maingui.o -MD -MP -MF $(DEPDIR)/hexchat-maingui.Tpo -c -o hexchat-maingui.o `test -f 'maingui.c' || echo '$(srcdir)/'`maingui.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/hexchat-maingui.Tpo $(DEPDIR)/hexchat-maingui.Po
#	$(AM_V_CC)source='maingui.c' object='hexchat-maingui.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hexchat_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o hexchat-maingui.o `test -f 'maingui.c' || echo '$(srcdir)/'`maingui.c

hexchat-maingui.obj: maingui.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hexchat_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT hexchat-maingui.obj -MD -MP -MF $(DEPDIR)/hexchat-maingui.Tpo -c -o hexchat-maingui.obj `if test -f 'maingui.c'; then $(CYGPATH_W) 'maingui.c'; else $(CYGPATH_W) '$(srcdir)/maingui.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/hexchat-maingui.Tpo $(DEPDIR)/hexchat-maingui.Po
#	$(AM_V_CC)source='maingui.c' object='hexchat-maingui.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hexchat_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o hexchat-maingui.obj `if test -f 'maingui.c'; then $(CYGPATH_W) 'maingui.c'; else $(CYGPATH_W) '$(srcdir)/maingui.c'; fi`

hexchat-notifygui.o: notifygui.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hexchat_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT hexchat-notifygui.o -MD -MP -MF $(DEPDIR)/hexchat-notifygui.Tpo -c -o hexchat-notifygui.o `test -f 'notifygui.c' || echo '$(srcdir)/'`notifygui.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/hexchat-notifygui.Tpo $(DEPDIR)/hexchat-notifygui.Po
#	$(AM_V_CC)source='notifygui.c' object='hexchat-notifygui.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hexchat_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o hexchat-notifygui.o `test -f 'notifygui.c' || echo '$(srcdir)/'`notifygui.c

hexchat-notifygui.obj: notifygui.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hexchat_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT hexchat-notifygui.obj -MD -MP -MF $(DEPDIR)/hexchat-notifygui.Tpo -c -o hexchat-notifygui.obj `if test -f 'notifygui.c'; then $(CYGPATH_W) 'notifygui.c'; else $(CYGPATH_W) '$(srcdir)/notifygui.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/hexchat-notifygui.Tpo $(DEPDIR)/hexchat-notifygui.Po
#	$(AM_V_CC)source='notifygui.c' object='hexchat-notifygui.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hexchat_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o hexchat-notifygui.obj `if test -f 'notifygui.c'; then $(CYGPATH_W) 'notifygui.c'; else $(CYGPATH_W) '$(srcdir)/notifygui.c'; fi`

notifications/hexchat-notification-dummy.o: notifications/notification-dummy.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hexchat_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT notifications/hexchat-notification-dummy.o -MD -MP -MF notifications/$(DEPDIR)/hexchat-notification-dummy.Tpo -c -o notifications/hexchat-notification-dummy.o `test -f 'notifications/notification-dummy.c' || echo '$(srcdir)/'`notifications/notification-dummy.c
	$(AM_V_at)$(am__mv) notifications/$(DEPDIR)/hexchat-notification-dummy.Tpo notifications/$(DEPDIR)/hexchat-notification-dummy.Po
#	$(AM_V_CC)source='notifications/notification-dummy.c' object='notifications/hexchat-notification-dummy.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hexchat_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o notifications/hexchat-notification-dummy.o `test -f 'notifications/notification-dummy.c' || echo '$(srcdir)/'`notifications/notification-dummy.c

notifications/hexchat-notification-dummy.obj: notifications/notification-dummy.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hexchat_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT notifications/hexchat-notification-dummy.obj -MD -MP -MF notifications/$(DEPDIR)/hexchat-notification-dummy.Tpo -c -o notifications/hexchat-notification-dummy.obj `if test -f 'notifications/notification-dummy.c'; then $(CYGPATH_W) 'notifications/notification-dummy.c'; else $(CYGPATH_W) '$(srcdir)/notifications/notification-dummy.c'; fi`
	$(AM_V_at)$(am__mv) notifications/$(DEPDIR)/hexchat-notification-dummy.Tpo notifications/$(DEPDIR)/hexchat-notification-dummy.Po
#	$(AM_V_CC)source='notifications/notification-dummy.c' object='notifications/hexchat-notification-dummy.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hexchat_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o notifications/hexchat-notification-dummy.obj `if test -f 'notifications/notification-dummy.c'; then $(CYGPATH_W) 'notifications/notification-dummy.c'; else $(CYGPATH_W) '$(srcdir)/notifications/notification-dummy.c'; fi`

notifications/hexchat-notification-libnotify.o: notifications/notification-libnotify.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hexchat_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT notifications/hexchat-notification-libnotify.o -MD -MP -MF notifications/$(DEPDIR)/hexchat-notification-libnotify.Tpo -c -o notifications/hexchat-notification-libnotify.o `test -f 'notifications/notification-libnotify.c' || echo '$(srcdir)/'`notifications/notification-libnotify.c
	$(AM_V_at)$(am__mv) notifications/$(DEPDIR)/hexchat-notification-libnotify.Tpo notifications/$(DEPDIR)/hexchat-notification-libnotify.Po
#	$(AM_V_CC)source='notifications/notification-libnotify.c' object='notifications/hexchat-notification-libnotify.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hexchat_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o notifications/hexchat-notification-libnotify.o `test -f 'notifications/notification-libnotify.c' || echo '$(srcdir)/'`notifications/notification-libnotify.c

notifications/hexchat-notification-libnotify.obj: notifications/notification-libnotify.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hexchat_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT notifications/hexchat-notification-libnotify.obj -MD -MP -MF notifications/$(DEPDIR)/hexchat-notification-libnotify.Tpo -c -o notifications/hexchat-notification-libnotify.obj `if test -f 'notifications/notification-libnotify.c'; then $(CYGPATH_W) 'notifications/notification-libnotify.c'; else $(CYGPATH_W) '$(srcdir)/notifications/notification-libnotify.c'; fi`
	$(AM_V_at)$(am__mv) notifications/$(DEPDIR)/hexchat-notification-libnotify.Tpo notifications/$(DEPDIR)/hexchat-notification-libnotify.Po
#	$(AM_V_CC)source='notifications/notification-libnotify.c' object='notifications/hexchat-notification-libnotify.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hexchat_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o notifications/hexchat-notification-libnotify.obj `if test -f 'notifications/notification-libnotify.c'; then $(CYGPATH_W) 'notifications/notification-libnotify.c'; else $(CYGPATH_W) '$(srcdir)/notifications/notification-libnotify.c'; fi`

hexchat-palette.o: palette.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hexchat_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT hexchat-palette.o -MD -MP -MF $(DEPDIR)/hexchat-palette.Tpo -c -o hexchat-palette.o `test -f 'palette.c' || echo '$(srcdir)/'`palette.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/hexchat-palette.Tpo $(DEPDIR)/hexchat-palette.Po
#	$(AM_V_CC)source='palette.c' object='hexchat-palette.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hexchat_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o hexchat-palette.o `test -f 'palette.c' || echo '$(srcdir)/'`palette.c

hexchat-palette.obj: palette.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hexchat_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT hexchat-palette.obj -MD -MP -MF $(DEPDIR)/hexchat-palette.Tpo -c -o hexchat-palette.obj `if test -f 'palette.c'; then $(CYGPATH_W) 'palette.c'; else $(CYGPATH_W) '$(srcdir)/palette.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/hexchat-palette.Tpo $(DEPDIR)/hexchat-palette.Po
#	$(AM_V_CC)source='palette.c' object='hexchat-palette.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hexchat_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o hexchat-palette.obj `if test -f 'palette.c'; then $(CYGPATH_W) 'palette.c'; else $(CYGPATH_W) '$(srcdir)/palette.c'; fi`

hexchat-pixmaps.o: pixmaps.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hexchat_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT hexchat-pixmaps.o -MD -MP -MF $(DEPDIR)/hexchat-pixmaps.Tpo -c -o hexchat-pixmaps.o `test -f 'pixmaps.c' || echo '$(srcdir)/'`pixmaps.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/hexchat-pixmaps.Tpo $(DEPDIR)/hexchat-pixmaps.Po
#	$(AM_V_CC)source='pixmaps.c' object='hexchat-pixmaps.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hexchat_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o hexchat-pixmaps.o `test -f 'pixmaps.c' || echo '$(srcdir)/'`pixmaps.c

hexchat-pixmaps.obj: pixmaps.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hexchat_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT hexchat-pixmaps.obj -MD -MP -MF $(DEPDIR)/hexchat-pixmaps.Tpo -c -o hexchat-pixmaps.obj `if test -f 'pixmaps.c'; then $(CYGPATH_W) 'pixmaps.c'; else $(CYGPATH_W) '$(srcdir)/pixmaps.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/hexchat-pixmaps.Tpo $(DEPDIR)/hexchat-pixmaps.Po
#	$(AM_V_CC)source='pixmaps.c' object='hexchat-pixmaps.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hexchat_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o hexchat-pixmaps.obj `if test -f 'pixmaps.c'; then $(CYGPATH_W) 'pixmaps.c'; else $(CYGPATH_W) '$(srcdir)/pixmaps.c'; fi`

hexchat-plugin-tray.o: plugin-tray.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hexchat_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT hexchat-plugin-tray.o -MD -MP -MF $(DEPDIR)/hexchat-plugin-tray.Tpo -c -o hexchat-plugin-tray.o `test -f 'plugin-tray.c' || echo '$(srcdir)/'`plugin-tray.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/hexchat-plugin-tray.Tpo $(DEPDIR)/hexchat-plugin-tray.Po
#	$(AM_V_CC)source='plugin-tray.c' object='hexchat-plugin-tray.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hexchat_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o hexchat-plugin-tray.o `test -f 'plugin-tray.c' || echo '$(srcdir)/'`plugin-tray.c

hexchat-plugin-tray.obj: plugin-tray.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hexchat_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT hexchat-plugin-tray.obj -MD -MP -MF $(DEPDIR)/hexchat-plugin-tray.Tpo -c -o hexchat-plugin-tray.obj `if test -f 'plugin-tray.c'; then $(CYGPATH_W) 'plugin-tray.c'; else $(CYGPATH_W) '$(srcdir)/plugin-tray.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/hexchat-plugin-tray.Tpo $(DEPDIR)/hexchat-plugin-tray.Po
#	$(AM_V_CC)source='plugin-tray.c' object='hexchat-plugin-tray.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hexchat_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o hexchat-plugin-tray.obj `if test -f 'plugin-tray.c'; then $(CYGPATH_W) 'plugin-tray.c'; else $(CYGPATH_W) '$(srcdir)/plugin-tray.c'; fi`

hexchat-plugingui.o: plugingui.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hexchat_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT hexchat-plugingui.o -MD -MP -MF $(DEPDIR)/hexchat-plugingui.Tpo -c -o hexchat-plugingui.o `test -f 'plugingui.c' || echo '$(srcdir)/'`plugingui.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/hexchat-plugingui.Tpo $(DEPDIR)/hexchat-plugingui.Po
#	$(AM_V_CC)source='plugingui.c' object='hexchat-plugingui.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hexchat_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o hexchat-plugingui.o `test -f 'plugingui.c' || echo '$(srcdir)/'`plugingui.c

hexchat-plugingui.obj: plugingui.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hexchat_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT hexchat-plugingui.obj -MD -MP -MF $(DEPDIR)/hexchat-plugingui.Tpo -c -o hexchat-plugingui.obj `if test -f 'plugingui.c'; then $(CYGPATH_W) 'plugingui.c'; else $(CYGPATH_W) '$(srcdir)/plugingui.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/hexchat-plugingui.Tpo $(DEPDIR)/hexchat-plugingui.Po
#	$(AM_V_CC)source='plugingui.c' object='hexchat-plugingui.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hexchat_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o hexchat-plugingui.obj `if test -f 'plugingui.c'; then $(CYGPATH_W) 'plugingui.c'; else $(CYGPATH_W) '$(srcdir)/plugingui.c'; fi`

hexchat-plugin-notification.o: plugin-notification.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hexchat_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT hexchat-plugin-notification.o -MD -MP -MF $(DEPDIR)/hexchat-plugin-notification.Tpo -c -o hexchat-plugin-notification.o `test -f 'plugin-notification.c' || echo '$(srcdir)/'`plugin-notification.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/hexchat-plugin-notification.Tpo $(DEPDIR)/hexchat-plugin-notification.Po
#	$(AM_V_CC)source='plugin-notification.c' object='hexchat-plugin-notification.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hexchat_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o hexchat-plugin-notification.o `test -f 'plugin-notification.c' || echo '$(srcdir)/'`plugin-notification.c

hexchat-plugin-notification.obj: plugin-notification.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hexchat_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT hexchat-plugin-notification.obj -MD -MP -MF $(DEPDIR)/hexchat-plugin-notification.Tpo -c -o hexchat-plugin-notification.obj `if test -f 'plugin-notification.c'; then $(CYGPATH_W) 'plugin-notification.c'; else $(CYGPATH_W) '$(srcdir)/plugin-notification.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/hexchat-plugin-notification.Tpo $(DEPDIR)/hexchat-plugin-notification.Po
#	$(AM_V_CC)source='plugin-notification.c' object='hexchat-plugin-notification.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hexchat_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o hexchat-plugin-notification.obj `if test -f 'plugin-notification.c'; then $(CYGPATH_W) 'plugin-notification.c'; else $(CYGPATH_W) '$(srcdir)/plugin-notification.c'; fi`

hexchat-rawlog.o: rawlog.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hexchat_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT hexchat-rawlog.o -MD -MP -MF $(DEPDIR)/hexchat-rawlog.Tpo -c -o hexchat-rawlog.o `test -f 'rawlog.c' || echo '$(srcdir)/'`rawlog.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/hexchat-rawlog.Tpo $(DEPDIR)/hexchat-rawlog.Po
#	$(AM_V_CC)source='rawlog.c' object='hexchat-rawlog.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hexchat_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o hexchat-rawlog.o `test -f 'rawlog.c' || echo '$(srcdir)/'`rawlog.c

hexchat-rawlog.obj: rawlog.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hexchat_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT hexchat-rawlog.obj -MD -MP -MF $(DEPDIR)/hexchat-rawlog.Tpo -c -o hexchat-rawlog.obj `if test -f 'rawlog.c'; then $(CYGPATH_W) 'rawlog.c'; else $(CYGPATH_W) '$(srcdir)/rawlog.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/hexchat-rawlog.Tpo $(DEPDIR)/hexchat-rawlog.Po
#	$(AM_V_CC)source='rawlog.c' object='hexchat-rawlog.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hexchat_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o hexchat-rawlog.obj `if test -f 'rawlog.c'; then $(CYGPATH_W) 'rawlog.c'; else $(CYGPATH_W) '$(srcdir)/rawlog.c'; fi`

hexchat-servlistgui.o: servlistgui.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hexchat_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT hexchat-servlistgui.o -MD -MP -MF $(DEPDIR)/hexchat-servlistgui.Tpo -c -o hexchat-servlistgui.o `test -f 'servlistgui.c' || echo '$(srcdir)/'`servlistgui.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/hexchat-servlistgui.Tpo $(DEPDIR)/hexchat-servlistgui.Po
#	$(AM_V_CC)source='servlistgui.c' object='hexchat-servlistgui.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hexchat_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o hexchat-servlistgui.o `test -f 'servlistgui.c' || echo '$(srcdir)/'`servlistgui.c

hexchat-servlistgui.obj: servlistgui.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hexchat_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT hexchat-servlistgui.obj -MD -MP -MF $(DEPDIR)/hexchat-servlistgui.Tpo -c -o hexchat-servlistgui.obj `if test -f 'servlistgui.c'; then $(CYGPATH_W) 'servlistgui.c'; else $(CYGPATH_W) '$(srcdir)/servlistgui.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/hexchat-servlistgui.Tpo $(DEPDIR)/hexchat-servlistgui.Po
#	$(AM_V_CC)source='servlistgui.c' object='hexchat-servlistgui.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hexchat_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o hexchat-servlistgui.obj `if test -f 'servlistgui.c'; then $(CYGPATH_W) 'servlistgui.c'; else $(CYGPATH_W) '$(srcdir)/servlistgui.c'; fi`

hexchat-setup.o: setup.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hexchat_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT hexchat-setup.o -MD -MP -MF $(DEPDIR)/hexchat-setup.Tpo -c -o hexchat-setup.o `test -f 'setup.c' || echo '$(srcdir)/'`setup.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/hexchat-setup.Tpo $(DEPDIR)/hexchat-setup.Po
#	$(AM_V_CC)source='setup.c' object='hexchat-setup.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hexchat_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o hexchat-setup.o `test -f 'setup.c' || echo '$(srcdir)/'`setup.c

hexchat-setup.obj: setup.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hexchat_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT hexchat-setup.obj -MD -MP -MF $(DEPDIR)/hexchat-setup.Tpo -c -o hexchat-setup.obj `if test -f 'setup.c'; then $(CYGPATH_W) 'setup.c'; else $(CYGPATH_W) '$(srcdir)/setup.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/hexchat-setup.Tpo $(DEPDIR)/hexchat-setup.Po
#	$(AM_V_CC)source='setup.c' object='hexchat-setup.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hexchat_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o hexchat-setup.obj `if test -f 'setup.c'; then $(CYGPATH_W) 'setup.c'; else $(CYGPATH_W) '$(srcdir)/setup.c'; fi`

hexchat-sexy-iso-codes.o: sexy-iso-codes.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hexchat_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT hexchat-sexy-iso-codes.o -MD -MP -MF $(DEPDIR)/hexchat-sexy-iso-codes.Tpo -c -o hexchat-sexy-iso-codes.o `test -f 'sexy-iso-codes.c' || echo '$(srcdir)/'`sexy-iso-codes.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/hexchat-sexy-iso-codes.Tpo $(DEPDIR)/hexchat-sexy-iso-codes.Po
#	$(AM_V_CC)source='sexy-iso-codes.c' object='hexchat-sexy-iso-codes.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hexchat_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o hexchat-sexy-iso-codes.o `test -f 'sexy-iso-codes.c' || echo '$(srcdir)/'`sexy-iso-codes.c

hexchat-sexy-iso-codes.obj: sexy-iso-codes.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hexchat_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT hexchat-sexy-iso-codes.obj -MD -MP -MF $(DEPDIR)/hexchat-sexy-iso-codes.Tpo -c -o hexchat-sexy-iso-codes.obj `if test -f 'sexy-iso-codes.c'; then $(CYGPATH_W) 'sexy-iso-codes.c'; else $(CYGPATH_W) '$(srcdir)/sexy-iso-codes.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/hexchat-sexy-iso-codes.Tpo $(DEPDIR)/hexchat-sexy-iso-codes.Po
#	$(AM_V_CC)source='sexy-iso-codes.c' object='hexchat-sexy-iso-codes.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hexchat_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o hexchat-sexy-iso-codes.obj `if test -f 'sexy-iso-codes.c'; then $(CYGPATH_W) 'sexy-iso-codes.c'; else $(CYGPATH_W) '$(srcdir)/sexy-iso-codes.c'; fi`

hexchat-sexy-spell-entry.o: sexy-spell-entry.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hexchat_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT hexchat-sexy-spell-entry.o -MD -MP -MF $(DEPDIR)/hexchat-sexy-spell-entry.Tpo -c -o hexchat-sexy-spell-entry.o `test -f 'sexy-spell-entry.c' || echo '$(srcdir)/'`sexy-spell-entry.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/hexchat-sexy-spell-entry.Tpo $(DEPDIR)/hexchat-sexy-spell-entry.Po
#	$(AM_V_CC)source='sexy-spell-entry.c' object='hexchat-sexy-spell-entry.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hexchat_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o hexchat-sexy-spell-entry.o `test -f 'sexy-spell-entry.c' || echo '$(srcdir)/'`sexy-spell-entry.c

hexchat-sexy-spell-entry.obj: sexy-spell-entry.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hexchat_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT hexchat-sexy-spell-entry.obj -MD -MP -MF $(DEPDIR)/hexchat-sexy-spell-entry.Tpo -c -o hexchat-sexy-spell-entry.obj `if test -f 'sexy-spell-entry.c'; then $(CYGPATH_W) 'sexy-spell-entry.c'; else $(CYGPATH_W) '$(srcdir)/sexy-spell-entry.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/hexchat-sexy-spell-entry.Tpo $(DEPDIR)/hexchat-sexy-spell-entry.Po
#	$(AM_V_CC)source='sexy-spell-entry.c' object='hexchat-sexy-spell-entry.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hexchat_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o hexchat-sexy-spell-entry.obj `if test -f 'sexy-spell-entry.c'; then $(CYGPATH_W) 'sexy-spell-entry.c'; else $(CYGPATH_W) '$(srcdir)/sexy-spell-entry.c'; fi`

hexchat-textgui.o: textgui.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hexchat_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT hexchat-textgui.o -MD -MP -MF $(DEPDIR)/hexchat-textgui.Tpo -c -o hexchat-textgui.o `test -f 'textgui.c' || echo '$(srcdir)/'`textgui.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/hexchat-textgui.Tpo $(DEPDIR)/hexchat-textgui.Po
#	$(AM_V_CC)source='textgui.c' object='hexchat-textgui.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hexchat_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o hexchat-textgui.o `test -f 'textgui.c' || echo '$(srcdir)/'`textgui.c

hexchat-textgui.obj: textgui.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hexchat_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT hexchat-textgui.obj -MD -MP -MF $(DEPDIR)/hexchat-textgui.Tpo -c -o hexchat-textgui.obj `if test -f 'textgui.c'; then $(CYGPATH_W) 'textgui.c'; else $(CYGPATH_W) '$(srcdir)/textgui.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/hexchat-textgui.Tpo $(DEPDIR)/hexchat-textgui.Po
#	$(AM_V_CC)source='textgui.c' object='hexchat-textgui.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hexchat_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o hexchat-textgui.obj `if test -f 'textgui.c'; then $(CYGPATH_W) 'textgui.c'; else $(CYGPATH_W) '$(srcdir)/textgui.c'; fi`

hexchat-urlgrab.o: urlgrab.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hexchat_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT hexchat-urlgrab.o -MD -MP -MF $(DEPDIR)/hexchat-urlgrab.Tpo -c -o hexchat-urlgrab.o `test -f 'urlgrab.c' || echo '$(srcdir)/'`urlgrab.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/hexchat-urlgrab.Tpo $(DEPDIR)/hexchat-urlgrab.Po
#	$(AM_V_CC)source='urlgrab.c' object='hexchat-urlgrab.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hexchat_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o hexchat-urlgrab.o `test -f 'urlgrab.c' || echo '$(srcdir)/'`urlgrab.c

hexchat-urlgrab.obj: urlgrab.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hexchat_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT hexchat-urlgrab.obj -MD -MP -MF $(DEPDIR)/hexchat-urlgrab.Tpo -c -o hexchat-urlgrab.obj `if test -f 'urlgrab.c'; then $(CYGPATH_W) 'urlgrab.c'; else $(CYGPATH_W) '$(srcdir)/urlgrab.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/hexchat-urlgrab.Tpo $(DEPDIR)/hexchat-urlgrab.Po
#	$(AM_V_CC)source='urlgrab.c' object='hexchat-urlgrab.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hexchat_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o hexchat-urlgrab.obj `if test -f 'urlgrab.c'; then $(CYGPATH_W) 'urlgrab.c'; else $(CYGPATH_W) '$(srcdir)/urlgrab.c'; fi`

hexchat-userlistgui.o: userlistgui.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hexchat_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT hexchat-userlistgui.o -MD -MP -MF $(DEPDIR)/hexchat-userlistgui.Tpo -c -o hexchat-userlistgui.o `test -f 'userlistgui.c' || echo '$(srcdir)/'`userlistgui.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/hexchat-userlistgui.Tpo $(DEPDIR)/hexchat-userlistgui.Po
#	$(AM_V_CC)source='userlistgui.c' object='hexchat-userlistgui.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hexchat_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o hexchat-userlistgui.o `test -f 'userlistgui.c' || echo '$(srcdir)/'`userlistgui.c

hexchat-userlistgui.obj: userlistgui.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hexchat_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT hexchat-userlistgui.obj -MD -MP -MF $(DEPDIR)/hexchat-userlistgui.Tpo -c -o hexchat-userlistgui.obj `if test -f 'userlistgui.c'; then $(CYGPATH_W) 'userlistgui.c'; else $(CYGPATH_W) '$(srcdir)/userlistgui.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/hexchat-userlistgui.Tpo $(DEPDIR)/hexchat-userlistgui.Po
#	$(AM_V_CC)source='userlistgui.c' object='hexchat-userlistgui.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hexchat_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o hexchat-userlistgui.obj `if test -f 'userlistgui.c'; then $(CYGPATH_W) 'userlistgui.c'; else $(CYGPATH_W) '$(srcdir)/userlistgui.c'; fi`

hexchat-xtext.o: xtext.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hexchat_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT hexchat-xtext.o -MD -MP -MF $(DEPDIR)/hexchat-xtext.Tpo -c -o hexchat-xtext.o `test -f 'xtext.c' || echo '$(srcdir)/'`xtext.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/hexchat-xtext.Tpo $(DEPDIR)/hexchat-xtext.Po
#	$(AM_V_CC)source='xtext.c' object='hexchat-xtext.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hexchat_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o hexchat-xtext.o `test -f 'xtext.c' || echo '$(srcdir)/'`xtext.c

hexchat-xtext.obj: xtext.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hexchat_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT hexchat-xtext.obj -MD -MP -MF $(DEPDIR)/hexchat-xtext.Tpo -c -o hexchat-xtext.obj `if test -f 'xtext.c'; then $(CYGPATH_W) 'xtext.c'; else $(CYGPATH_W) '$(srcdir)/xtext.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/hexchat-xtext.Tpo $(DEPDIR)/hexchat-xtext.Po
#	$(AM_V_CC)source='xtext.c' object='hexchat-xtext.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hexchat_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o hexchat-xtext.obj `if test -f 'xtext.c'; then $(CYGPATH_W) 'xtext.c'; else $(CYGPATH_W) '$(srcdir)/xtext.c'; fi`

hexchat-resources.o: resources.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hexchat_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT hexchat-resources.o -MD -MP -MF $(DEPDIR)/hexchat-resources.Tpo -c -o hexchat-resources.o `test -f 'resources.c' || echo '$(srcdir)/'`resources.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/hexchat-resources.Tpo $(DEPDIR)/hexchat-resources.Po
#	$(AM_V_CC)source='resources.c' object='hexchat-resources.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hexchat_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o hexchat-resources.o `test -f 'resources.c' || echo '$(srcdir)/'`resources.c

hexchat-resources.obj: resources.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hexchat_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT hexchat-resources.obj -MD -MP -MF $(DEPDIR)/hexchat-resources.Tpo -c -o hexchat-resources.obj `if test -f 'resources.c'; then $(CYGPATH_W) 'resources.c'; else $(CYGPATH_W) '$(srcdir)/resources.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/hexchat-resources.Tpo $(DEPDIR)/hexchat-resources.Po
#	$(AM_V_CC)source='resources.c' object='hexchat-resources.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hexchat_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o hexchat-resources.obj `if test -f 'resources.c'; then $(CYGPATH_W) 'resources.c'; else $(CYGPATH_W) '$(srcdir)/resources.c'; fi`

.m.o:
	$(AM_V_OBJC)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.o$$||'`;\
	$(OBJCCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
	$(am__mv) $$depbase.Tpo $$depbase.Po
#	$(AM_V_OBJC)source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(OBJCDEPMODE) $(depcomp) \
#	$(AM_V_OBJC_no)$(OBJCCOMPILE) -c -o $@ $<

.m.obj:
	$(AM_V_OBJC)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.obj$$||'`;\
	$(OBJCCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ `$(CYGPATH_W) '$<'` &&\
	$(am__mv) $$depbase.Tpo $$depbase.Po
#	$(AM_V_OBJC)source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(OBJCDEPMODE) $(depcomp) \
#	$(AM_V_OBJC_no)$(OBJCCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.m.lo:
	$(AM_V_OBJC)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.lo$$||'`;\
	$(LTOBJCCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
	$(am__mv) $$depbase.Tpo $$depbase.Plo
#	$(AM_V_OBJC)source='$<' object='$@' libtool=yes \
#	DEPDIR=$(DEPDIR) $(OBJCDEPMODE) $(depcomp) \
#	$(AM_V_OBJC_no)$(LTOBJCCOMPILE) -c -o $@ $<

notifications/hexchat-notification-osx.o: notifications/notification-osx.m
	$(AM_V_OBJC)$(OBJC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hexchat_CPPFLAGS) $(CPPFLAGS) $(AM_OBJCFLAGS) $(OBJCFLAGS) -MT notifications/hexchat-notification-osx.o -MD -MP -MF notifications/$(DEPDIR)/hexchat-notification-osx.Tpo -c -o notifications/hexchat-notification-osx.o `test -f 'notifications/notification-osx.m' || echo '$(srcdir)/'`notifications/notification-osx.m
	$(AM_V_at)$(am__mv) notifications/$(DEPDIR)/hexchat-notification-osx.Tpo notifications/$(DEPDIR)/hexchat-notification-osx.Po
#	$(AM_V_OBJC)source='notifications/notification-osx.m' object='notifications/hexchat-notification-osx.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(OBJCDEPMODE) $(depcomp) \
#	$(AM_V_OBJC_no)$(OBJC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hexchat_CPPFLAGS) $(CPPFLAGS) $(AM_OBJCFLAGS) $(OBJCFLAGS) -c -o notifications/hexchat-notification-osx.o `test -f 'notifications/notification-osx.m' || echo '$(srcdir)/'`notifications/notification-osx.m

notifications/hexchat-notification-osx.obj: notifications/notification-osx.m
	$(AM_V_OBJC)$(OBJC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hexchat_CPPFLAGS) $(CPPFLAGS) $(AM_OBJCFLAGS) $(OBJCFLAGS) -MT notifications/hexchat-notification-osx.obj -MD -MP -MF notifications/$(DEPDIR)/hexchat-notification-osx.Tpo -c -o notifications/hexchat-notification-osx.obj `if test -f 'notifications/notification-osx.m'; then $(CYGPATH_W) 'notifications/notification-osx.m'; else $(CYGPATH_W) '$(srcdir)/notifications/notification-osx.m'; fi`
	$(AM_V_at)$(am__mv) notifications/$(DEPDIR)/hexchat-notification-osx.Tpo notifications/$(DEPDIR)/hexchat-notification-osx.Po
#	$(AM_V_OBJC)source='notifications/notification-osx.m' object='notifications/hexchat-notification-osx.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(OBJCDEPMODE) $(depcomp) \
#	$(AM_V_OBJC_no)$(OBJC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hexchat_CPPFLAGS) $(CPPFLAGS) $(AM_OBJCFLAGS) $(OBJCFLAGS) -c -o notifications/hexchat-notification-osx.obj `if test -f 'notifications/notification-osx.m'; then $(CYGPATH_W) 'notifications/notification-osx.m'; else $(CYGPATH_W) '$(srcdir)/notifications/notification-osx.m'; fi`

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs

ID: $(am__tagged_files)
	$(am__define_uniq_tagged_files); mkid -fID $$unique
tags: tags-am
TAGS: tags

tags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	set x; \
	here=`pwd`; \
	$(am__define_uniq_tagged_files); \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: ctags-am

CTAGS: ctags
ctags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	$(am__define_uniq_tagged_files); \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"
cscopelist: cscopelist-am

cscopelist-am: $(am__tagged_files)
	list='$(am__tagged_files)'; \
	case "$(srcdir)" in \
	  [\\/]* | ?:[\\/]*) sdir="$(srcdir)" ;; \
	  *) sdir=$(subdir)/$(srcdir) ;; \
	esac; \
	for i in $$list; do \
	  if test -f "$$i"; then \
	    echo "$(subdir)/$$i"; \
	  else \
	    echo "$$sdir/$$i"; \
	  fi; \
	done >> $(top_builddir)/cscope.files

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) check-am
all-local:
all-am: Makefile $(PROGRAMS) all-local
installdirs:
	for dir in "$(DESTDIR)$(bindir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	if test -z '$(STRIP)'; then \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	      install; \
	else \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	    "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'" install; \
	fi
mostlyclean-generic:
	-test -z "$(MOSTLYCLEANFILES)" || rm -f $(MOSTLYCLEANFILES)

clean-generic:
	-test -z "$(CLEANFILES)" || rm -f $(CLEANFILES)

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)
	-rm -f notifications/$(DEPDIR)/$(am__dirstamp)
	-rm -f notifications/$(am__dirstamp)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
	-test -z "$(BUILT_SOURCES)" || rm -f $(BUILT_SOURCES)
clean: clean-am

clean-am: clean-binPROGRAMS clean-generic clean-libtool mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR) notifications/$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

html-am:

info: info-am

info-am:

install-data-am:

install-dvi: install-dvi-am

install-dvi-am:

install-exec-am: install-binPROGRAMS

install-html: install-html-am

install-html-am:

install-info: install-info-am

install-info-am:

install-man:

install-pdf: install-pdf-am

install-pdf-am:

install-ps: install-ps-am

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR) notifications/$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-binPROGRAMS

.MAKE: all check install install-am install-strip

.PHONY: CTAGS GTAGS TAGS all all-am all-local check check-am clean \
	clean-binPROGRAMS clean-generic clean-libtool cscopelist-am \
	ctags ctags-am distclean distclean-compile distclean-generic \
	distclean-libtool distclean-tags distdir dvi dvi-am html \
	html-am info info-am install install-am install-binPROGRAMS \
	install-data install-data-am install-dvi install-dvi-am \
	install-exec install-exec-am install-html install-html-am \
	install-info install-info-am install-man install-pdf \
	install-pdf-am install-ps install-ps-am install-strip \
	installcheck installcheck-am installdirs maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic mostlyclean-libtool pdf pdf-am ps ps-am \
	tags tags-am uninstall uninstall-am uninstall-binPROGRAMS


%.plist: %.c
	$(analysis_verbose)

resources.h: $(top_srcdir)/data/hexchat.gresource.xml $(resources_files)
	$(AM_V_GEN) $(GLIB_COMPILE_RESOURCES) --target=$@ --sourcedir=$(top_srcdir)/data --generate-header --manual-register $<

resources.c: $(top_srcdir)/data/hexchat.gresource.xml $(resources_files)
	$(AM_V_GEN) $(GLIB_COMPILE_RESOURCES) --target=$@ --sourcedir=$(top_srcdir)/data --generate-source --manual-register $<
#all-local: $(analyze_plists)

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
